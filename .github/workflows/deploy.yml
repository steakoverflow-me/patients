name: Deploy CI

on:
  push:
    branches: [ "deploy" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install software
      run: |
        sudo apt update
        sudo apt install npm leiningen wget
    - name: Install node_modules
      run: npm install
    - name: Install dependencies
      run: lein deps
    - name: Run unit tests
      run: lein unit-tests

# Integration tests not working in github actions environment. Decided to switch them off and not to dive deeply...
#
#    - name: Run integration tests
#      run: |
#        wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_92.0.4515.159-1_amd64.deb -O chrome92.deb
#        sudo dpkg -i chrome92.deb
#        rm chrome92.deb
#        sudo apt-get install -f
#        google-chrome --version
#
#        wget https://chromedriver.storage.googleapis.com/92.0.4515.107/chromedriver_linux64.zip
#        unzip chromedriver_linux64.zip
#        rm chromedriver_linux64.zip
#        sudo mv chromedriver /usr/bin/chromedriver
#        sudo chown $(whoami) /usr/bin/chromedriver
#        sudo chmod +x /usr/bin/chromedrive
#
#        export TEST_CHROME_BINARY=$(which google-chrome)
#        export TEST_CHROMEDRIVER_BINARY=/usr/bin/chromedriver
#        lein integration-tests

    - name: Create uberjar
      run: |
        lein uberjar
        mv target/patients.jar patients.jar
    - uses: actions/upload-artifact@v2
      with:
        name: uberjar
        path: patients.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: uberjar
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DEV_SSH_PRIVATE }}
        known_hosts: ${{ secrets.DEV_SSH_KNOWN_HOSTS }}
    - name: Copy uberjar
      run: scp patients.jar root@${{ secrets.HOST }}:/var/local/patients.jar
    - name: Set up supervisor config
      run: |e
        ssh root@${{ secrets.HOST }} "echo '[program:patients]' > /etc/supervisor/conf.d/patients.conf"
        ssh root@${{ secrets.HOST }} "echo 'command=java -jar /var/local/patients.jar' >> /etc/supervisor/conf.d/patients.conf"
        ssh root@${{ secrets.HOST }} "echo 'autostart=true' >> /etc/supervisor/conf.d/patients.conf"
        ssh root@${{ secrets.HOST }} "echo 'autorestart=true' >> /etc/supervisor/conf.d/patients.conf"
        ssh root@${{ secrets.HOST }} "echo 'stdout_logfile=/var/local/patients.log' >> /etc/supervisor/conf.d/patients.conf"
        ssh root@${{ secrets.HOST }} "echo 'stderr_logfile=/var/local/patients.log' >> /etc/supervisor/conf.d/patients.conf"
        ssh root@${{ secrets.HOST }} "echo 'environment=DB_USER=\"${{ secrets.DB_USER }}\",DB_PASSWORD=\"${{ secrets.DB_PASSWORD }}\",DB_HOST=\"${{ secrets.DB_HOST }}\",DB_PORT=\"\",DB_NAME=\"${{ secrets.DB_NAME }}\"' >> /etc/supervisor/conf.d/patients.conf"
    - name: Reload config and rerun server
      run: |
        ssh root@${{ secrets.HOST }} "supervisorctl reload"
        ssh root@${{ secrets.HOST }} "supervisorctl restart patients || supervisorctl start patients"
